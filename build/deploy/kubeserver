apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: kubeserver
    app.kubernetes.io/component: kubeserver
    app.kubernetes.io/instance: onecloud-cluster-7md2
    app.kubernetes.io/managed-by: onecloud-operator
    app.kubernetes.io/name: onecloud-cluster
  name: default-kubeserver
  namespace: onecloud
  ownerReferences:
  - apiVersion: onecloud.yunion.io/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: OnecloudCluster
    name: default
    uid: 4b6f3d57-32df-4b28-a1d5-6581041476a8
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: kubeserver
      app.kubernetes.io/component: kubeserver
      app.kubernetes.io/instance: onecloud-cluster-7md2
      app.kubernetes.io/managed-by: onecloud-operator
      app.kubernetes.io/name: onecloud-cluster
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kubeserver
        app.kubernetes.io/component: kubeserver
        app.kubernetes.io/instance: onecloud-cluster-7md2
        app.kubernetes.io/managed-by: onecloud-operator
        app.kubernetes.io/name: onecloud-cluster
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: onecloud.yunion.io/controller
                operator: In
                values:
                - enable
      containers:
      - command:
        - /opt/yunion/bin/kubeserver
        - --config
        - /etc/yunion/kubeserver.conf
        image: harbor.cloud.com/llj/kubeserver:0.5
        imagePullPolicy: IfNotPresent
        name: kubeserver
        ports:
        - containerPort: 30442
          name: api
          protocol: TCP
        resources:
          limits:
            cpu: 2667m
            memory: 4198Mi
          requests:
            cpu: 10m
            memory: 10Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/yunion/pki
          name: certs
          readOnly: true
        - mountPath: /etc/yunion
          name: config
          readOnly: true
        - mountPath: /root/.kube/config
          name: kubeconfig
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - /opt/yunion/bin/kubeserver
        - --config
        - /etc/yunion/kubeserver.conf
        - --auto-sync-table
        - --exit-after-db-init
        image: harbor.cloud.com/llj/kubeserver:0.5
        imagePullPolicy: IfNotPresent
        name: init
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/yunion/pki
          name: certs
          readOnly: true
        - mountPath: /etc/yunion
          name: config
          readOnly: true
        - mountPath: /root/.kube/config
          name: kubeconfig
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: onecloud-operator
      serviceAccountName: onecloud-operator
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/controlplane
      volumes:
      - name: certs
        secret:
          defaultMode: 420
          items:
          - key: ca.crt
            path: ca.crt
          - key: service.crt
            path: service.crt
          - key: service.key
            path: service.key
          secretName: default-certs
      - configMap:
          defaultMode: 420
          items:
          - key: config
            path: kubeserver.conf
          name: default-kubeserver
        name: config
      - hostPath:
          path: /root/.kube/config
          type: ""
        name: kubeconfig
